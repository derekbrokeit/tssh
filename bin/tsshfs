#!/bin/bash
# Copyright 2012 Derek Ashley Thomas

SERV=$HOME/.tsshrc

if [[ ! -n $SSHFS_DIR ]] ; then
    SSHFS_DIR=$HOME/sshfs
fi

# find the destination
search="$(tssh-search $1)"
if [[ $? -gt 0 ]] ; then
    echo "$search"
    exit
fi

name=$(egrep "$search" $SERV | awk -F'|' '{print $1}')
ip=$(egrep "$search" $SERV | awk -F'|' '{print $2}')
user=$(egrep "$search" $SERV | awk -F'|' '{print $3}')
port=$(egrep "$search" $SERV | awk -F'|' '{print $4}')
auto_msg=$(egrep "$search" $SERV | awk -F'|' '{print $5}')

# remove the star from the name if it happens to be a central server
dir_name="$SSHFS_DIR/$(echo "$name" | sed 's/\*//')"
mkdir -p $dir_name

if [[ "x$(ls $dir_name)" != "x" ]] ; then
    ! echo "$(basename $0): $name may already be mounted, please check $dir_name"
    exit
fi

cmd="sshfs"
if [[ ! -n $port && -n $ip ]] ; then
    # this connects to any server without port forwarding
    $cmd $ip: $dir_name && echo "$(basename $0): successfully mounted $dir_name"

elif [[ -n $ip  && -n $port ]] ; then

    # grab info on the central server  ... this assumes that only one exists
    center_name=$(egrep "\*\|" $SERV | awk -F'|' '{print $1}')
    center_ip=$(  egrep "\*\|" $SERV | awk -F'|' '{print $2}')
    center_user=$(egrep "\*\|" $SERV | awk -F'|' '{print $3}')
    center_port=$(egrep "\*\|" $SERV | awk -F'|' '{print $4}')

    # first, open tunnel
    tssh-tunnel $port $ip $center_ip $center_user

    # now establish connection to final destination
    #echo "\r  tunnel -> $name ...                    \n"
    $cmd -p $port ${user}@localhost: $dir_name && echo "$(basename $0): successfully mounted $dir_name"
fi

# vim: set filetype=sh
